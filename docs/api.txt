``gs.group.type.set`` API
=========================

I think what I will do is take a leaf out of the "Can post" code
and use interfaces and adaption to power the selectable group
type. When changing the type of a group two things need to
happen: the old type needs to be unset, and the new type needs to
be set. So I will need two adaptors for each of the group types.

One adaptor will be used to clear out the old settings::

  Change Group Type ──→ IUnset ──→ Unsetter

The adaptor will be fairly simple, adapting a specific group-type
to the IUnset interface, and providing the ``unset()`` method.

The other adaptor provided by each group type will set the new
setting::

  Change Group Type ──→ ISet ──→ Setter

The setters will have to be used to power the vocabulary that is
used with the Change Group Type page. As such each setter will
need the following properties.

* ID: an identifier for the group-type. Used as the token that is
  passed back from the form, and used to get the named adaptor.

* Weight: an integer that is use to order the group types.

* Title: the name of the group type, that is displayed on the
  page.

* Show: a Boolean that allows for particular group-types to be
  turned off.

The setter will provide the ``set()`` method.

Abstract base classes
---------------------

.. autoclass:: gs.group.type.set.SetABC
   :members:

.. autoclass:: gs.group.type.set.UnsetABC
   :members:

Interfaces
----------

.. autoclass:: gs.group.type.set.interfaces.ISetType
   :members:

.. autoclass:: gs.group.type.set.interfaces.IUnsetType
   :members:

Vocabulary
----------

.. autoclass:: gs.group.type.set.vocabulary.GroupTypeVocabulary
   :members: __iter__, __len__, __contains__, adaptors, adaptorIds
